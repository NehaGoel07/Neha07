{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\burger-builder\\\\src\\\\containers\\\\ContactData\\\\ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport './ContactData.css';\nimport axios from '../../axios-order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport Input from '../../components/UI/Input/Input';\nexport default class ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Email'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your ZipCode'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Country'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'cheapest',\n              displayValue: 'Cheapest'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    this.orderHandler = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price,\n        customer: {\n          name: 'Neha',\n          email: 'neha@gmail.com',\n          address: {\n            street: 'test',\n            zipCode: '12345',\n            country: 'India'\n          },\n          deliveryMethod: 'fastest'\n        }\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => this.setState({\n        loading: false\n      }));\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {};\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      changed: this.inputChangedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.orderHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"ORDER\"));\n\n    if (this.state.loading) {\n      form = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 18\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ContactData\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"Enter your contact data\"), form);\n  }\n\n}","map":{"version":3,"sources":["D:/React/burger-builder/src/containers/ContactData/ContactData.js"],"names":["React","Component","Button","axios","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","email","street","zipCode","country","deliveryMethod","options","displayValue","loading","orderHandler","e","preventDefault","setState","order","ingredients","props","price","customer","address","post","then","response","history","push","catch","error","inputChangedHandler","event","inputIdentifier","render","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport './ContactData.css'\r\nimport axios from '../../axios-order'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport Input from '../../components/UI/Input/Input'\r\n\r\nexport default class ContactData extends Component {\r\n\r\n    state={\r\n        orderForm:{\r\n                name:{\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Your Name'\r\n                    },\r\n                    value:''\r\n                },\r\n                email:{ \r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Your Email'\r\n                    },\r\n                    value:''\r\n                },\r\n                street:{\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Your Street'\r\n                    },\r\n                    value:''\r\n                },\r\n                zipCode:{\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Your ZipCode'\r\n                    },\r\n                    value:''\r\n                },\r\n                country:{\r\n                    elementType:'input',\r\n                    elementConfig:{\r\n                        type:'text',\r\n                        placeholder:'Your Country'\r\n                    },\r\n                    value:''\r\n                },\r\n                deliveryMethod:{\r\n                    elementType:'select',\r\n                    elementConfig:{\r\n                        options:[\r\n                            {value:'fastest',displayValue:'Fastest'},\r\n                            {value:'cheapest',displayValue:'Cheapest'}\r\n                        ]\r\n                    },\r\n                    value:''\r\n                }\r\n        },\r\n        loading:false\r\n    }\r\n\r\n    orderHandler=(e)=>{\r\n        e.preventDefault();\r\n        this.setState({loading:true})\r\n        const order={\r\n            ingredients:this.props.ingredients,\r\n            price:this.props.price,\r\n            customer:{\r\n                name:'Neha',\r\n                email:'neha@gmail.com',\r\n                address:{\r\n                    street:'test',\r\n                    zipCode:'12345',\r\n                    country:'India'\r\n                },\r\n                deliveryMethod:'fastest'\r\n            }\r\n        }\r\n        axios.post('/orders.json',order)\r\n        .then(response=>{\r\n            \r\n            this.setState({loading:false});\r\n            this.props.history.push('/');\r\n        })\r\n            .catch(error=>this.setState({loading:false})\r\n            );\r\n    }\r\n\r\n    inputChangedHandler=(event,inputIdentifier) =>{\r\n\r\n    }\r\n    render() {\r\n\r\n        const formElementsArray=[];\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form=(\r\n            <form >\r\n                {/* <Input inputtype=\"input\" type=\"text\" name=\"name\" placeholder=\"Enter Name\" />\r\n                <Input inputtype=\"input\" type=\"email\" name=\"email\" placeholder=\"Enter email\"/>\r\n                <Input inputtype=\"input\" type=\"text\" name=\"street\" placeholder=\"Enter street\"/>\r\n                <Input inputtype=\"input\" type=\"text\" name=\"postalCode\" placeholder=\"Enter postal code\"/> */}\r\n\r\n                \r\n                {formElementsArray.map(formElement=>(\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        changed={this.inputChangedHandler}/>\r\n                \r\n                ))}\r\n                <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if(this.state.loading)\r\n        {\r\n            form=<Spinner/>\r\n        }\r\n        return (\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}