{"ast":null,"code":"var _jsxFileName = \"D:\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControl from '../../components/BuildControls/BuildControls';\nimport BuildControls from '../../components/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  meat: 1.3,\n  cheese: 0.4,\n  bacon: 0.7\n};\nexport default class BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updateCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updateCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updateCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updateCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["D:/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControl","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","meat","cheese","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updateCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControl from '../../components/BuildControls/BuildControls'\r\nimport BuildControls from '../../components/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad:0.5,\r\n    meat:1.3,\r\n    cheese:0.4,\r\n    bacon:0.7\r\n}\r\n\r\nexport default class BurgerBuilder extends Component {\r\n\r\n    state={\r\n        ingredients:{\r\n            salad:0,\r\n            bacon:0,\r\n            cheese:0,\r\n            meat:0\r\n        },\r\n        totalPrice:4,\r\n        purchasable:false,\r\n        purchasing:false\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n\r\n        const sum=Object.keys(ingredients)\r\n        .map(igKey=>{\r\n            return ingredients[igKey];\r\n        })\r\n        .reduce((sum,el)=>{\r\n            return sum +el ;\r\n        },0);\r\n        this.setState({purchasable:sum>0});\r\n\r\n    }\r\n\r\n    addIngredientHandler=(type)=>{\r\n        const oldCount=this.state.ingredients[type];\r\n        const updateCount=oldCount+1;\r\n        const updatedIngredients={\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type]=updateCount;\r\n        const priceAddition=INGREDIENT_PRICES[type];\r\n        const oldPrice=this.state.totalPrice;\r\n        const newPrice= oldPrice + priceAddition;\r\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler=(type)=>{\r\n        const oldCount=this.state.ingredients[type];\r\n        if(oldCount<=0)\r\n        {\r\n            return ;\r\n        }\r\n        const updateCount=oldCount-1;\r\n        const updatedIngredients={\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type]=updateCount;\r\n        const priceDeduction=INGREDIENT_PRICES[type];\r\n        const oldPrice=this.state.totalPrice;\r\n        const newPrice= oldPrice - priceDeduction;\r\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler=()=>{\r\n        this.setState({purchasing:true});\r\n    }\r\n    render() {\r\n        const disabledInfo={\r\n            ...this.state.ingredients\r\n        };\r\n        for(let key in disabledInfo)\r\n        {\r\n            disabledInfo[key]=disabledInfo[key]<=0\r\n        }\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing}>\r\n                    <OrderSummary ingredients={this.state.ingredients}/>\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                <BuildControls ingredientAdded={this.addIngredientHandler}\r\n                ingredientRemoved={this.removeIngredientHandler}\r\n                disabled={disabledInfo}\r\n                price={this.state.totalPrice}\r\n                purchasable={this.state.purchasable}\r\n                ordered={this.purchaseHandler}/>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}