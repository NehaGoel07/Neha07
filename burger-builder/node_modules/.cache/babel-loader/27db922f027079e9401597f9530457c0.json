{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Auxx/Auxx';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-order';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  meat: 1.3,\n  cheese: 0.4,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updateCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updateCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updateCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updateCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // this.setState({loading:true})\n      // //alert('You continue');\n      // const order={\n      //     ingredients:this.state.ingredients,\n      //     price:this.state.totalPrice,\n      //     customer:{\n      //         name:'Neha',\n      //         email:'neha@gmail.com',\n      //         address:{\n      //             street:'test',\n      //             zipCode:'12345',\n      //             country:'India'\n      //         },\n      //         deliveryMethod:'fastest'\n      //     }\n      // }\n      // axios.post('/orders.json',order)\n      // .then(response=>\n      //     this.setState({loading:false,purchasing:false}))\n      //     .catch(error=>this.setState({loading:false,purchasing:false})\n      //     );\n      const queryParams = [];\n\n      for (let i in this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + this.state.totalPrice);\n      const queryString = queryParams.join('&');\n      this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://burger-builder-bd369.firebaseio.com/ingredients.json').then(response => {\n      this.setState({\n        ingredients: response.data\n      });\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 39\n      }\n    }, \"Ingredients can't be loaded\") : null;\n\n    if (this.state.ingredients) {\n      burger = /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        price: this.state.totalPrice,\n        purchasable: this.state.purchasable,\n        ordered: this.purchaseHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }));\n      orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n        purchaseCanceled: this.purchaseCancelHandler,\n        price: this.state.totalPrice,\n        purchaseContinued: this.purchaseContinueHandler,\n        ingredients: this.state.ingredients,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 30\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      orderSummary = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 26\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, orderSummary), burger);\n  }\n\n}\n\nexport default withErrorHandler(BurgerBuilder, axios);","map":{"version":3,"sources":["D:/React/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","meat","cheese","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","updateCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","componentDidMount","get","then","response","data","catch","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","orderSummary","burger"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Aux from '../../hoc/Auxx/Auxx';\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-order'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\n\r\nconst INGREDIENT_PRICES={\r\n    salad:0.5,\r\n    meat:1.3,\r\n    cheese:0.4,\r\n    bacon:0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state={\r\n        ingredients:null,\r\n        totalPrice:4,\r\n        purchasable:false,\r\n        purchasing:false,\r\n        loading:false,\r\n        error:false\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://burger-builder-bd369.firebaseio.com/ingredients.json')\r\n        .then(response=>{\r\n            this.setState({ingredients:response.data});\r\n\r\n        }).catch(error=>{\r\n            this.setState({error:true})\r\n        });\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n\r\n        const sum=Object.keys(ingredients)\r\n        .map(igKey=>{\r\n            return ingredients[igKey];\r\n        })\r\n        .reduce((sum,el)=>{\r\n            return sum +el ;\r\n        },0);\r\n        this.setState({purchasable:sum>0});\r\n\r\n    }\r\n\r\n    addIngredientHandler=(type)=>{\r\n        const oldCount=this.state.ingredients[type];\r\n        const updateCount=oldCount+1;\r\n        const updatedIngredients={\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type]=updateCount;\r\n        const priceAddition=INGREDIENT_PRICES[type];\r\n        const oldPrice=this.state.totalPrice;\r\n        const newPrice= oldPrice + priceAddition;\r\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler=(type)=>{\r\n        const oldCount=this.state.ingredients[type];\r\n        if(oldCount<=0)\r\n        {\r\n            return ;\r\n        }\r\n        const updateCount=oldCount-1;\r\n        const updatedIngredients={\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type]=updateCount;\r\n        const priceDeduction=INGREDIENT_PRICES[type];\r\n        const oldPrice=this.state.totalPrice;\r\n        const newPrice= oldPrice - priceDeduction;\r\n        this.setState({totalPrice:newPrice,ingredients:updatedIngredients}); \r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler=()=>{\r\n        this.setState({purchasing:true});\r\n    }\r\n\r\n    purchaseCancelHandler=()=>{\r\n        this.setState({purchasing:false})\r\n    }\r\n\r\n    purchaseContinueHandler=() =>{\r\n\r\n        // this.setState({loading:true})\r\n        // //alert('You continue');\r\n        // const order={\r\n        //     ingredients:this.state.ingredients,\r\n        //     price:this.state.totalPrice,\r\n        //     customer:{\r\n        //         name:'Neha',\r\n        //         email:'neha@gmail.com',\r\n        //         address:{\r\n        //             street:'test',\r\n        //             zipCode:'12345',\r\n        //             country:'India'\r\n        //         },\r\n        //         deliveryMethod:'fastest'\r\n        //     }\r\n        // }\r\n        // axios.post('/orders.json',order)\r\n        // .then(response=>\r\n        //     this.setState({loading:false,purchasing:false}))\r\n        //     .catch(error=>this.setState({loading:false,purchasing:false})\r\n        //     );\r\n\r\n        const queryParams=[];\r\n        for(let i in this.state.ingredients)\r\n        {\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString=queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname:'/checkout',\r\n            search:'?'+queryString\r\n        });\r\n    }\r\n    render() {\r\n        const disabledInfo={\r\n            ...this.state.ingredients\r\n        };\r\n        for(let key in disabledInfo)\r\n        {\r\n            disabledInfo[key]=disabledInfo[key]<=0\r\n        }\r\n\r\n        let orderSummary=null;\r\n\r\n        let burger=this.state.error ? <p>Ingredients can't be loaded</p> : null;\r\n        if(this.state.ingredients){\r\n\r\n            burger=(\r\n                <Aux>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                <BuildControls ingredientAdded={this.addIngredientHandler}\r\n                ingredientRemoved={this.removeIngredientHandler}\r\n                disabled={disabledInfo}\r\n                price={this.state.totalPrice}\r\n                purchasable={this.state.purchasable}\r\n                ordered={this.purchaseHandler}/>\r\n                </Aux>\r\n                );\r\n                orderSummary=<OrderSummary \r\n                purchaseCanceled={this.purchaseCancelHandler}\r\n                price={this.state.totalPrice}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                ingredients={this.state.ingredients}/>\r\n        }\r\n        \r\n        if(this.state.loading)\r\n        {\r\n            orderSummary=<Spinner/>;\r\n        }\r\n       \r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder,axios);"]},"metadata":{},"sourceType":"module"}