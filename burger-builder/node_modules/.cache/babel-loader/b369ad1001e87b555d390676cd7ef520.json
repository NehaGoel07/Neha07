{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\burger-builder\\\\src\\\\components\\\\Order\\\\Order.js\";\nimport React from 'react';\nimport './Order.css';\n\nconst order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, ig.name, \"(\", ig.amount, \")\");\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Order\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Ingredients: \", ingredientOutput), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Price: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }\n  }, Number.parseFloat(props.price).toFixed(2))));\n};\n\nexport default order;","map":{"version":3,"sources":["D:/React/burger-builder/src/components/Order/Order.js"],"names":["React","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","Number","parseFloat","price","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAGC,KAAD,IAAU;AAEnB,QAAMC,WAAW,GAAC,EAAlB;;AAEA,OAAI,IAAIC,cAAR,IAA0BF,KAAK,CAACC,WAAhC,EAA4C;AACxCA,IAAAA,WAAW,CAACE,IAAZ,CAAiB;AACbC,MAAAA,IAAI,EAACF,cADQ;AAEbG,MAAAA,MAAM,EAAEL,KAAK,CAACC,WAAN,CAAkBC,cAAlB;AAFK,KAAjB;AAIH;;AAED,QAAMI,gBAAgB,GAACL,WAAW,CAACM,GAAZ,CAAgBC,EAAE,IAAE;AACvC,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,EAAE,CAACJ,IAAV,OAAiBI,EAAE,CAACH,MAApB,MAAR;AACH,GAFsB,CAAvB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBC,gBAAjB,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASG,MAAM,CAACC,UAAP,CAAkBV,KAAK,CAACW,KAAxB,EAA+BC,OAA/B,CAAuC,CAAvC,CAAT,CAAV,CAFA,CADJ;AAOH,CArBD;;AAuBA,eAAeb,KAAf","sourcesContent":["import React from 'react'\r\nimport './Order.css'\r\n\r\nconst order= (props) =>{\r\n\r\n    const ingredients=[];\r\n\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name:ingredientName,\r\n            amount: props.ingredients[ingredientName]\r\n        })\r\n    }\r\n\r\n    const ingredientOutput=ingredients.map(ig=>{\r\n        return  <span>{ig.name}({ig.amount})</span>\r\n    })\r\n    return(\r\n        <div className=\"Order\">\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n    );\r\n   \r\n};\r\n\r\nexport default order;"]},"metadata":{},"sourceType":"module"}