@page "/Login"
@using System.Net.Http
@using Newtonsoft.Json
@inject IHttpClientFactory httpClient
@inject NavigationManager _navigate


<h3>Login</h3>

<div class="container">
    <div>
        <EditForm Model="@loginStudent" OnValidSubmit="@ValidateUser">
            <DataAnnotationsValidator />

            <div class="col-12 row">
                <label class="col-2 font-weight-bold">User Name</label>
                <InputText class="form-control col-3" @bind-Value="loginStudent.Username" placeholder="Enter User Name"></InputText>

            </div>
            <br />
            <div class="col-12 row">
                <label class="col-2 font-weight-bold">Password</label>
                <InputText class="form-control col-3" @bind-Value="loginStudent.Password" placeholder="Enter Pasword"></InputText>

            </div>
            <br />
            <div class="col-12 row">
                <input type="submit" class="form-control col-1 btn btn-primary" value=" Login" />
            </div>

        </EditForm>

    </div>
</div>

@code {

    public LoginStudent loginStudent;

    protected override Task OnInitializedAsync()
    {
        loginStudent = new LoginStudent();
        return base.OnInitializedAsync();
    }

    private void ValidateUser()
    {
        string UserLogin = JsonConvert.SerializeObject(loginStudent);
        HttpRequestMessage httpRequestMessage = new HttpRequestMessage();

        httpRequestMessage.Method = new HttpMethod("POST");
        httpRequestMessage.RequestUri = new Uri("https://localhost:44357/api/Login/LoginDetails");
        httpRequestMessage.Content = new StringContent(UserLogin);
        httpRequestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
        var client = httpClient.CreateClient();
        var res = client.SendAsync(httpRequestMessage).Result;
        var resultStatus = res.StatusCode;
        if (resultStatus.ToString() == "OK")
        {
            _navigate.NavigateTo("/AllStudents");
        }

    }

}
