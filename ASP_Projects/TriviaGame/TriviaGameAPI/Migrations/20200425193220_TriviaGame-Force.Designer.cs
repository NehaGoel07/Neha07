// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TriviaGameAPI;

namespace TriviaGameAPI.Migrations
{
    [DbContext(typeof(TriviaGameContext))]
    [Migration("20200425193220_TriviaGame-Force")]
    partial class TriviaGameForce
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.3.20181.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TriviaGameLibraryShared.AdminUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FK_RoleMasterId")
                        .HasColumnName("FK_RoleMaster_Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("Modified_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TokenModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FK_RoleMasterId");

                    b.ToTable("Amin_Users");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.Answers", b =>
                {
                    b.Property<int>("AnsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Ans_Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AnsType")
                        .HasColumnName("Ans_Type")
                        .HasColumnType("bit");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerExplanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkQuesId")
                        .HasColumnName("fk_Ques_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsEnabled")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isEnabled")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("Modified_On")
                        .HasColumnType("datetime2");

                    b.HasKey("AnsId");

                    b.HasIndex("FkQuesId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.DifficultyLevelMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiffCode")
                        .IsRequired()
                        .HasColumnName("Diff_Code")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("DiffLvl")
                        .IsRequired()
                        .HasColumnName("Diff_Lvl")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Weightage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DifficultyLevel_Master");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.GameRuleDesc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkDifficultyLvlId")
                        .HasColumnName("fk_DifficultyLvl_Id")
                        .HasColumnType("int");

                    b.Property<int>("FkGameRuleId")
                        .HasColumnName("fk_GameRule_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("Modified_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoOfQues")
                        .HasColumnName("No_Of_Ques")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FkDifficultyLvlId");

                    b.HasIndex("FkGameRuleId");

                    b.ToTable("GameRule_Desc");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.GameRules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkDifficultyLvlId")
                        .HasColumnName("fk_DifficultyLvl_Id")
                        .HasColumnType("int");

                    b.Property<int>("FkGameId")
                        .HasColumnName("fk_Game_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("Modified_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoOfQues")
                        .HasColumnName("No_Of_Ques")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FkDifficultyLvlId");

                    b.HasIndex("FkGameId");

                    b.ToTable("GameRules");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.Games", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkPlateformId")
                        .HasColumnName("fk_Plateform_Id")
                        .HasColumnType("int");

                    b.Property<string>("GameDesc")
                        .HasColumnName("Game_Desc")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int?>("GameEndDate")
                        .HasColumnName("GameEnd_Date")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnName("Game_ID")
                        .HasColumnType("int");

                    b.Property<string>("GameImage")
                        .HasColumnName("Game_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameName")
                        .HasColumnName("Game_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameStartDate")
                        .HasColumnName("GameStart_Date")
                        .HasColumnType("int");

                    b.Property<string>("GameTitle")
                        .IsRequired()
                        .HasColumnName("Game_Title")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsEnabled")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isEnabled")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("MaxScore")
                        .HasColumnName("Max_Score")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("Modified_On")
                        .HasColumnType("datetime2");

                    b.Property<int?>("QuesCount")
                        .HasColumnName("Ques_Count")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FkPlateformId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.PlatformMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PlatformCode")
                        .IsRequired()
                        .HasColumnName("Platform_Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatformDesc")
                        .HasColumnName("Platform_Desc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PlatformType")
                        .IsRequired()
                        .HasColumnName("Platform_Type")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Platform_Master");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.QuestionTypeMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("QuesCode")
                        .IsRequired()
                        .HasColumnName("Ques_Code")
                        .HasColumnType("char(1)")
                        .IsFixedLength(true)
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("QuesType")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("QuestionType_Master");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.Questions", b =>
                {
                    b.Property<int>("QuesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Ques_Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkAdmUserId")
                        .HasColumnName("fk_AdmUser_id")
                        .HasColumnType("int");

                    b.Property<int>("FkDiffLvlId")
                        .HasColumnName("fk_DiffLvl_Id")
                        .HasColumnType("int");

                    b.Property<int>("FkQuesTypeId")
                        .HasColumnName("fk_QuesType_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsEnabled")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isEnabled")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("Modified_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuesDesc")
                        .HasColumnName("Ques_Desc")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("QuesImage")
                        .HasColumnName("Ques_Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuesTitle")
                        .HasColumnName("Ques_Title")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("QuesId");

                    b.HasIndex("FkAdmUserId");

                    b.HasIndex("FkDiffLvlId");

                    b.HasIndex("FkQuesTypeId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.RoleMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isActive")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasColumnName("Role_code")
                        .HasColumnType("varchar(1)")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("RoleDesc")
                        .IsRequired()
                        .HasColumnName("Role_Desc")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("RoleType")
                        .IsRequired()
                        .HasColumnName("Role_Type")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("RoleMaster");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.UserQuestionLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkAnsId")
                        .HasColumnName("fk_Ans_Id")
                        .HasColumnType("int");

                    b.Property<int>("FkQuesId")
                        .HasColumnName("fk_Ques_Id")
                        .HasColumnType("int");

                    b.Property<int>("FkUsrId")
                        .HasColumnName("fk_Usr_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("Modified_On")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("QuesEdt")
                        .HasColumnName("Ques_Edt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("QuesSdt")
                        .HasColumnName("Ques_Sdt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("TotalTime")
                        .HasColumnName("Total_Time")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FkAnsId");

                    b.HasIndex("FkQuesId");

                    b.HasIndex("FkUsrId");

                    b.ToTable("User_Question_Logs");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.UserSocialShareLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("Modified_On")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ShareDetails")
                        .IsRequired()
                        .HasColumnName("Share_Details")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UsrCompKey")
                        .IsRequired()
                        .HasColumnName("Usr_Comp_Key")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User_SocialShare_logs");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("Created_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("FkDiffLvlId")
                        .HasColumnName("fk_DiffLvl_Id")
                        .HasColumnType("int");

                    b.Property<int>("FkGameId")
                        .HasColumnName("fk_Game_Id")
                        .HasColumnType("int");

                    b.Property<int>("FkPlatformId")
                        .HasColumnName("fk_Platform_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("GameEdt")
                        .HasColumnName("Game_Edt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GameSdt")
                        .HasColumnName("Game_Sdt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnName("Modified_On")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoOfQuesAttempt")
                        .HasColumnName("No_of_Ques_Attempt")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("TotalScore")
                        .HasColumnName("Total_Score")
                        .HasColumnType("int");

                    b.Property<int>("TotalTime")
                        .HasColumnName("Total_Time")
                        .HasColumnType("int");

                    b.Property<string>("UsrCompKey")
                        .IsRequired()
                        .HasColumnName("Usr_Comp_Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsrDob")
                        .HasColumnName("Usr_DOB")
                        .HasColumnType("int");

                    b.Property<string>("UsrEmail")
                        .HasColumnName("Usr_Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UsrName")
                        .IsRequired()
                        .HasColumnName("Usr_Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<long?>("UsrPhone")
                        .HasColumnName("Usr_Phone")
                        .HasColumnType("bigint");

                    b.Property<int?>("UsrZipCode")
                        .HasColumnName("Usr_ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FkDiffLvlId");

                    b.HasIndex("FkGameId");

                    b.HasIndex("FkPlatformId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TriviaGameLibraryShared.AdminUsers", b =>
                {
                    b.HasOne("TriviaGameLibraryShared.RoleMaster", "RoleMaster")
                        .WithMany("AdminUsers")
                        .HasForeignKey("FK_RoleMasterId")
                        .HasConstraintName("FK_RoleMaster")
                        .IsRequired();
                });

            modelBuilder.Entity("TriviaGameLibraryShared.Answers", b =>
                {
                    b.HasOne("TriviaGameLibraryShared.Questions", "FkQues")
                        .WithMany("Answers")
                        .HasForeignKey("FkQuesId")
                        .HasConstraintName("FK_Questions")
                        .IsRequired();
                });

            modelBuilder.Entity("TriviaGameLibraryShared.GameRuleDesc", b =>
                {
                    b.HasOne("TriviaGameLibraryShared.DifficultyLevelMaster", "FkDifficultyLvl")
                        .WithMany("GameRuleDesc")
                        .HasForeignKey("FkDifficultyLvlId")
                        .HasConstraintName("FK_GameRule_Desc_DifficultyLevel_Master")
                        .IsRequired();

                    b.HasOne("TriviaGameLibraryShared.GameRules", "FkGameRule")
                        .WithMany("GameRuleDesc")
                        .HasForeignKey("FkGameRuleId")
                        .HasConstraintName("FK_GameRule_Desc_GameRules")
                        .IsRequired();
                });

            modelBuilder.Entity("TriviaGameLibraryShared.GameRules", b =>
                {
                    b.HasOne("TriviaGameLibraryShared.DifficultyLevelMaster", "FkDifficultyLvl")
                        .WithMany("GameRules")
                        .HasForeignKey("FkDifficultyLvlId")
                        .HasConstraintName("FK_GameRules_DifficultyLevel_Master")
                        .IsRequired();

                    b.HasOne("TriviaGameLibraryShared.Games", "FkGame")
                        .WithMany("GameRules")
                        .HasForeignKey("FkGameId")
                        .HasConstraintName("FK_GameRules_Games")
                        .IsRequired();
                });

            modelBuilder.Entity("TriviaGameLibraryShared.Games", b =>
                {
                    b.HasOne("TriviaGameLibraryShared.PlatformMaster", "FkPlateform")
                        .WithMany("Games")
                        .HasForeignKey("FkPlateformId")
                        .HasConstraintName("FK_Games_Plateform_Master")
                        .IsRequired();
                });

            modelBuilder.Entity("TriviaGameLibraryShared.Questions", b =>
                {
                    b.HasOne("TriviaGameLibraryShared.AdminUsers", "FkAdmUser")
                        .WithMany("Questions")
                        .HasForeignKey("FkAdmUserId")
                        .HasConstraintName("FK_Admin_Users")
                        .IsRequired();

                    b.HasOne("TriviaGameLibraryShared.DifficultyLevelMaster", "FkDiffLvl")
                        .WithMany("Questions")
                        .HasForeignKey("FkDiffLvlId")
                        .HasConstraintName("FK_DifficultyLevel_Master")
                        .IsRequired();

                    b.HasOne("TriviaGameLibraryShared.QuestionTypeMaster", "FkQuesType")
                        .WithMany("Questions")
                        .HasForeignKey("FkQuesTypeId")
                        .HasConstraintName("FK_QuestionType_Master")
                        .IsRequired();
                });

            modelBuilder.Entity("TriviaGameLibraryShared.UserQuestionLogs", b =>
                {
                    b.HasOne("TriviaGameLibraryShared.Answers", "FkAns")
                        .WithMany("UserQuestionLogs")
                        .HasForeignKey("FkAnsId")
                        .HasConstraintName("FK_User_Question_Logs_Answers")
                        .IsRequired();

                    b.HasOne("TriviaGameLibraryShared.Questions", "FkQues")
                        .WithMany("UserQuestionLogs")
                        .HasForeignKey("FkQuesId")
                        .HasConstraintName("FK_User_Question_Logs_Questions")
                        .IsRequired();

                    b.HasOne("TriviaGameLibraryShared.Users", "FkUsr")
                        .WithMany("UserQuestionLogs")
                        .HasForeignKey("FkUsrId")
                        .HasConstraintName("FK_User_Question_Logs_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("TriviaGameLibraryShared.Users", b =>
                {
                    b.HasOne("TriviaGameLibraryShared.DifficultyLevelMaster", "FkDiffLvl")
                        .WithMany("Users")
                        .HasForeignKey("FkDiffLvlId")
                        .HasConstraintName("FK_Users_DifficultyLevel_Master")
                        .IsRequired();

                    b.HasOne("TriviaGameLibraryShared.Games", "FkGame")
                        .WithMany("Users")
                        .HasForeignKey("FkGameId")
                        .HasConstraintName("FK_UsersGames")
                        .IsRequired();

                    b.HasOne("TriviaGameLibraryShared.PlatformMaster", "FkPlatform")
                        .WithMany("Users")
                        .HasForeignKey("FkPlatformId")
                        .HasConstraintName("FK_Users_Platform_Master")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
